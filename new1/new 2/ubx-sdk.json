{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "UBx SDK",
        "x-ibm-name": "ubx-sdk"
    },
    "servers": [
        {
            "x-name": "ubx-nonprod",
            "x-schema": "http://",
            "x-hostName": "internal-xpanse-sbx-datp-api-2015228706.ap-southeast-1.elb.amazonaws.com",
            "url": "http://internal-xpanse-sbx-datp-api-2015228706.ap-southeast-1.elb.amazonaws.com/xpanse/1.0/public/b3e7fvz2xcx7mu2g9p6mnfrgqnmn7jqi",
            "x-basePath": "/xpanse/1.0/public/b3e7fvz2xcx7mu2g9p6mnfrgqnmn7jqi"
        },
        {
            "x-name": "ubx-prod",
            "x-schema": "http://",
            "x-hostName": "internal-xpanse-prd-datp-api-1666780372.ap-southeast-1.elb.amazonaws.com",
            "url": "http://internal-xpanse-prd-datp-api-1666780372.ap-southeast-1.elb.amazonaws.com/xpanse/1.0/public/b3e7fvz2xcx7mu2g9p6mnfrgqnmn7jqi",
            "x-basePath": "/xpanse/1.0/public/b3e7fvz2xcx7mu2g9p6mnfrgqnmn7jqi"
        }
    ],
    "x-ibm-configuration": {
        "properties": {
            "target-url": {
                "value": "$(target-base-url)$(target-prefix-path)/public/b3e7fvz2xcx7mu2g9p6mnfrgqnmn7jqi/zoloz",
                "description": "URL of the proxy policy",
                "encoded": false
            }
        },
        "cors": {
            "enabled": false
        },
        "gateway": "datapower-api-gateway",
        "type": "rest",
        "phase": "realized",
        "enforced": true,
        "testable": true,
        "assembly": {
            "execute": [
                {
                    "invoke": {
                        "title": "invoke",
                        "version": "2.0.0",
                        "verb": "keep",
                        "target-url": "$(target-url)",
                        "follow-redirects": false,
                        "timeout": 60,
                        "parameter-control": {
                            "type": "blocklist",
                            "values": []
                        },
                        "header-control": {
                            "type": "blocklist",
                            "values": []
                        },
                        "inject-proxy-headers": true
                    }
                }
            ]
        }
    },
    "paths": {
        "/zoloz/post-sdk/{tenantId}/{batchId}": {
            "get": {
                "operationId": "postSdk",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "tenantId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "batchId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/zoloz/post-sdk-error/{tenantId}/{batchId}": {
            "get": {
                "operationId": "postSdkError",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "tenantId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "batchId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/zoloz/pre-sdk/{batchId}": {
            "get": {
                "operationId": "preSdk",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "batchId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/{provider}/post-sdk-error-facecapture/{tenantId}/{batchId}": {
            "get": {
                "operationId": "getSdkErrorFaceCapture",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "provider",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "tenantId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "batchId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/{provider}/post-sdk-facecapture/{tenantId}/{batchId}": {
            "get": {
                "operationId": "getSdkFaceCapture",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "provider",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "tenantId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "batchId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        }
    },
    "x-policies": [
        {
            "type": "trafficmanagement",
            "name": "TrafficManagement",
            "description": "Traffic management policies let you configure cache, control traffic quotas and spikes, set concurrent rate limits, and so on",
            "policies": [
                {
                    "name": "spikeArrestEnv",
                    "displayName": "Spike Arrest at Environment",
                    "description": "Spike Arrest policy protects against traffic spikes.",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "quotaAtProduct",
                    "displayName": "Quota at Product Level",
                    "description": "Quota policy to configure the number of request messages that an API proxy allows over a period of time.",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "spikeArrestProxy",
                    "displayName": "spikeArrestProxy",
                    "description": "Spike Arrest policy protects against traffic spikes.",
                    "enabled": false,
                    "applyToFlow": false
                }
            ]
        },
        {
            "type": "security",
            "name": "Security",
            "description": "Security policies let you control access to your APIs with OAuth, API key validation, and other threat protection features.",
            "policies": [
                {
                    "name": "cors",
                    "displayName": "CORS",
                    "description": "Enable API's to support Cross-Origin Resource Sharing requests",
                    "enabled": true,
                    "applyToFlow": false
                },
                {
                    "name": "verifyapikey",
                    "displayName": "Verify API Key",
                    "description": "Lets you enforce verification of API keys at runtime.",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "googleIDToken",
                    "displayName": "Google ID Token for Target Server",
                    "description": "Lets you authenticate using Google authentication",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "validateOauthToken",
                    "displayName": "Validate Oauth Token",
                    "description": "Validate Oauth Token",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "clientinfo",
                    "displayName": "clientinfo",
                    "description": "client information",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "tonikusertoken",
                    "displayName": "tonikusertoken",
                    "description": "tonik user token",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "accesscontrol",
                    "displayName": "IP Access Control",
                    "description": "Lets you allow or deny access to your APIs by specific IP addresses.",
                    "enabled": false,
                    "applyToFlow": false
                }
            ]
        },
        {
            "type": "logging",
            "name": "Logging",
            "description": "Logging policies allow you to log the request data and response data.",
            "policies": [
                {
                    "name": "log",
                    "displayName": "Logger Handler",
                    "description": "Lets you to log the proxy data during runtime",
                    "enabled": true,
                    "applyToFlow": false
                },
                {
                    "name": "generateCorrelationId",
                    "displayName": "Generate Correlation ID",
                    "description": "Generate unqiue correlation Id for E2E tracking",
                    "enabled": true,
                    "applyToFlow": false
                },
                {
                    "name": "generateFlowName",
                    "displayName": "Track Current Execution Flow Name",
                    "description": "Define and track apigee's current proxy execution flow name",
                    "enabled": true,
                    "applyToFlow": false
                }
            ]
        },
        {
            "type": "threatprotection",
            "name": "Threat Management",
            "description": "Threat management allow you to scan the incoming payloads for any miscellaneous content in the request.",
            "policies": [
                {
                    "name": "jsonThreat",
                    "displayName": "JSON Threat Injection",
                    "description": "Enable payload scan for JSON content",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "xssThreat",
                    "displayName": "XSS Injection",
                    "description": "Scans XSS threats in request header, URI, payload",
                    "enabled": false,
                    "applyToFlow": false
                }
            ]
        },
        {
            "type": "routing",
            "name": "Target Server Routing Handler",
            "description": "Endpoint routing for PowerCred micro-services",
            "policies": [
                {
                    "name": "disablePathsuffix",
                    "displayName": "Disable Proxy Base Pathsuffix",
                    "description": "Disable pathsuffix for target routing rule",
                    "enabled": false,
                    "applyToFlow": false
                }
            ]
        },
        {
            "type": "messageValidation",
            "name": "Message Validation",
            "description": "Validate Request/Response mandatory header and payload",
            "policies": [
                {
                    "name": "paylaodValidation",
                    "displayName": "Validate Request Payload",
                    "description": "Proxy request schema validation",
                    "enabled": true,
                    "applyToFlow": false
                },
                {
                    "name": "authHeaderCheck",
                    "displayName": "Validate Mandatory Auth Header",
                    "description": "Check proxy mandatory authorization header fields",
                    "enabled": true,
                    "applyToFlow": false
                },
                {
                    "name": "requestHeaderCheck",
                    "displayName": "Request Header Check",
                    "description": "Request Header Check",
                    "enabled": true,
                    "applyToFlow": false
                }
            ]
        },
        {
            "type": "custom",
            "name": "Custom Policies",
            "description": "Custom related policies",
            "policies": [
                {
                    "name": "removeAuthHeader",
                    "displayName": "Remove Proxy Auth Header",
                    "description": "Policy to remove proxy auth header before routing to target server",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "customAnalytics",
                    "displayName": "Custom Analytics",
                    "description": "Custom Analytics",
                    "enabled": false,
                    "applyToFlow": false
                }
            ]
        },
        {
            "type": "errorHandler",
            "name": "Custom Error Handler",
            "description": "Policy template related to custom fault handling",
            "policies": [
                {
                    "name": "flowErrorHandler",
                    "displayName": "Error Handler",
                    "description": "Policy to handle custom error handling",
                    "enabled": false,
                    "applyToFlow": false
                },
                {
                    "name": "targetErrorHandler",
                    "displayName": "Target Error Handler",
                    "description": "Policy to handle custom error handling for target servers",
                    "enabled": false,
                    "applyToFlow": false
                }
            ]
        },
        {
            "type": "compliance",
            "name": "Compliance",
            "description": "Detect Compliance",
            "policies": [
                {
                    "name": "complianceCall",
                    "displayName": "ComplianceCall",
                    "description": "call to compliance",
                    "enabled": true,
                    "applyToFlow": false
                }
            ]
        }
    ],
    "x-proxymetadata": {}
}
